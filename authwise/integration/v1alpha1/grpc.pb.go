// GENERATED BY go:generate. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: authwise/integration/v1alpha1/grpc.proto

package v1alpha1

import (
	v1alpha11 "github.com/authwisecom/api-client-go/authwise/types/core/v1alpha1"
	v1alpha1 "github.com/authwisecom/api-client-go/authwise/types/kit/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResolveProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input *v1alpha1.ProviderResolverInput `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *ResolveProviderRequest) Reset() {
	*x = ResolveProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authwise_integration_v1alpha1_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveProviderRequest) ProtoMessage() {}

func (x *ResolveProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authwise_integration_v1alpha1_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveProviderRequest.ProtoReflect.Descriptor instead.
func (*ResolveProviderRequest) Descriptor() ([]byte, []int) {
	return file_authwise_integration_v1alpha1_grpc_proto_rawDescGZIP(), []int{0}
}

func (x *ResolveProviderRequest) GetInput() *v1alpha1.ProviderResolverInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type ResolveProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *v1alpha1.ProviderResolverResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ResolveProviderResponse) Reset() {
	*x = ResolveProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authwise_integration_v1alpha1_grpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveProviderResponse) ProtoMessage() {}

func (x *ResolveProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authwise_integration_v1alpha1_grpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveProviderResponse.ProtoReflect.Descriptor instead.
func (*ResolveProviderResponse) Descriptor() ([]byte, []int) {
	return file_authwise_integration_v1alpha1_grpc_proto_rawDescGZIP(), []int{1}
}

func (x *ResolveProviderResponse) GetResult() *v1alpha1.ProviderResolverResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authwise_integration_v1alpha1_grpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authwise_integration_v1alpha1_grpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_authwise_integration_v1alpha1_grpc_proto_rawDescGZIP(), []int{2}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool            `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	User    *v1alpha11.User `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authwise_integration_v1alpha1_grpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authwise_integration_v1alpha1_grpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_authwise_integration_v1alpha1_grpc_proto_rawDescGZIP(), []int{3}
}

func (x *LoginResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LoginResponse) GetUser() *v1alpha11.User {
	if x != nil {
		return x.User
	}
	return nil
}

type UserPostProcessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *v1alpha11.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserPostProcessRequest) Reset() {
	*x = UserPostProcessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authwise_integration_v1alpha1_grpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPostProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPostProcessRequest) ProtoMessage() {}

func (x *UserPostProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authwise_integration_v1alpha1_grpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPostProcessRequest.ProtoReflect.Descriptor instead.
func (*UserPostProcessRequest) Descriptor() ([]byte, []int) {
	return file_authwise_integration_v1alpha1_grpc_proto_rawDescGZIP(), []int{4}
}

func (x *UserPostProcessRequest) GetUser() *v1alpha11.User {
	if x != nil {
		return x.User
	}
	return nil
}

type UserPostProcessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *v1alpha11.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserPostProcessResponse) Reset() {
	*x = UserPostProcessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authwise_integration_v1alpha1_grpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPostProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPostProcessResponse) ProtoMessage() {}

func (x *UserPostProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authwise_integration_v1alpha1_grpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPostProcessResponse.ProtoReflect.Descriptor instead.
func (*UserPostProcessResponse) Descriptor() ([]byte, []int) {
	return file_authwise_integration_v1alpha1_grpc_proto_rawDescGZIP(), []int{5}
}

func (x *UserPostProcessResponse) GetUser() *v1alpha11.User {
	if x != nil {
		return x.User
	}
	return nil
}

type GrantPostProcessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User  *v1alpha11.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Grant *v1alpha1.Grant `protobuf:"bytes,2,opt,name=grant,proto3" json:"grant,omitempty"`
}

func (x *GrantPostProcessRequest) Reset() {
	*x = GrantPostProcessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authwise_integration_v1alpha1_grpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantPostProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantPostProcessRequest) ProtoMessage() {}

func (x *GrantPostProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authwise_integration_v1alpha1_grpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantPostProcessRequest.ProtoReflect.Descriptor instead.
func (*GrantPostProcessRequest) Descriptor() ([]byte, []int) {
	return file_authwise_integration_v1alpha1_grpc_proto_rawDescGZIP(), []int{6}
}

func (x *GrantPostProcessRequest) GetUser() *v1alpha11.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GrantPostProcessRequest) GetGrant() *v1alpha1.Grant {
	if x != nil {
		return x.Grant
	}
	return nil
}

type GrantPostProcessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Grant *v1alpha1.Grant `protobuf:"bytes,1,opt,name=grant,proto3" json:"grant,omitempty"`
}

func (x *GrantPostProcessResponse) Reset() {
	*x = GrantPostProcessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authwise_integration_v1alpha1_grpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantPostProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantPostProcessResponse) ProtoMessage() {}

func (x *GrantPostProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authwise_integration_v1alpha1_grpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantPostProcessResponse.ProtoReflect.Descriptor instead.
func (*GrantPostProcessResponse) Descriptor() ([]byte, []int) {
	return file_authwise_integration_v1alpha1_grpc_proto_rawDescGZIP(), []int{7}
}

func (x *GrantPostProcessResponse) GetGrant() *v1alpha1.Grant {
	if x != nil {
		return x.Grant
	}
	return nil
}

var File_authwise_integration_v1alpha1_grpc_proto protoreflect.FileDescriptor

var file_authwise_integration_v1alpha1_grpc_proto_rawDesc = []byte{
	0x0a, 0x28, 0x61, 0x75, 0x74, 0x68, 0x77, 0x69, 0x73, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x61, 0x75, 0x74, 0x68,
	0x77, 0x69, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x27, 0x61, 0x75, 0x74, 0x68, 0x77,
	0x69, 0x73, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x25, 0x61, 0x75, 0x74, 0x68, 0x77, 0x69, 0x73, 0x65, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2f, 0x6b, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x6b, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a, 0x16, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x6b, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x66, 0x0a,
	0x17, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x77,
	0x69, 0x73, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6b, 0x69, 0x74, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x46, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x61, 0x0a,
	0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x77, 0x69, 0x73,
	0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x22, 0x50, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x77,
	0x69, 0x73, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x22, 0x51, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x8b, 0x01, 0x0a, 0x17, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x50,
	0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x36, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x05, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x77,
	0x69, 0x73, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6b, 0x69, 0x74, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x05, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x22, 0x54, 0x0a, 0x18, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x6b, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x52, 0x05, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x32, 0x94, 0x04, 0x0a, 0x1a, 0x41, 0x75,
	0x74, 0x68, 0x77, 0x69, 0x73, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x35, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a,
	0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x2b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x77, 0x69, 0x73,
	0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x35, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x77, 0x69,
	0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x10, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x36, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x77, 0x69, 0x73, 0x65,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x8e, 0x02, 0x0a, 0x21, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x77, 0x69, 0x73,
	0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x09, 0x47, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x77, 0x69, 0x73, 0x65, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x77, 0x69, 0x73, 0x65,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x62, 0x2f,
	0x61, 0x75, 0x74, 0x68, 0x77, 0x69, 0x73, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03,
	0x41, 0x49, 0x58, 0xaa, 0x02, 0x1d, 0x41, 0x75, 0x74, 0x68, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0xca, 0x02, 0x1d, 0x41, 0x75, 0x74, 0x68, 0x77, 0x69, 0x73, 0x65, 0x5c, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0xe2, 0x02, 0x29, 0x41, 0x75, 0x74, 0x68, 0x77, 0x69, 0x73, 0x65, 0x5c, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x1f, 0x41, 0x75, 0x74, 0x68, 0x77, 0x69, 0x73, 0x65, 0x3a, 0x3a, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_authwise_integration_v1alpha1_grpc_proto_rawDescOnce sync.Once
	file_authwise_integration_v1alpha1_grpc_proto_rawDescData = file_authwise_integration_v1alpha1_grpc_proto_rawDesc
)

func file_authwise_integration_v1alpha1_grpc_proto_rawDescGZIP() []byte {
	file_authwise_integration_v1alpha1_grpc_proto_rawDescOnce.Do(func() {
		file_authwise_integration_v1alpha1_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_authwise_integration_v1alpha1_grpc_proto_rawDescData)
	})
	return file_authwise_integration_v1alpha1_grpc_proto_rawDescData
}

var file_authwise_integration_v1alpha1_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_authwise_integration_v1alpha1_grpc_proto_goTypes = []interface{}{
	(*ResolveProviderRequest)(nil),          // 0: authwise.integration.v1alpha1.ResolveProviderRequest
	(*ResolveProviderResponse)(nil),         // 1: authwise.integration.v1alpha1.ResolveProviderResponse
	(*LoginRequest)(nil),                    // 2: authwise.integration.v1alpha1.LoginRequest
	(*LoginResponse)(nil),                   // 3: authwise.integration.v1alpha1.LoginResponse
	(*UserPostProcessRequest)(nil),          // 4: authwise.integration.v1alpha1.UserPostProcessRequest
	(*UserPostProcessResponse)(nil),         // 5: authwise.integration.v1alpha1.UserPostProcessResponse
	(*GrantPostProcessRequest)(nil),         // 6: authwise.integration.v1alpha1.GrantPostProcessRequest
	(*GrantPostProcessResponse)(nil),        // 7: authwise.integration.v1alpha1.GrantPostProcessResponse
	(*v1alpha1.ProviderResolverInput)(nil),  // 8: authwise.types.kit.v1alpha1.ProviderResolverInput
	(*v1alpha1.ProviderResolverResult)(nil), // 9: authwise.types.kit.v1alpha1.ProviderResolverResult
	(*v1alpha11.User)(nil),                  // 10: authwise.types.core.v1alpha1.User
	(*v1alpha1.Grant)(nil),                  // 11: authwise.types.kit.v1alpha1.Grant
}
var file_authwise_integration_v1alpha1_grpc_proto_depIdxs = []int32{
	8,  // 0: authwise.integration.v1alpha1.ResolveProviderRequest.input:type_name -> authwise.types.kit.v1alpha1.ProviderResolverInput
	9,  // 1: authwise.integration.v1alpha1.ResolveProviderResponse.result:type_name -> authwise.types.kit.v1alpha1.ProviderResolverResult
	10, // 2: authwise.integration.v1alpha1.LoginResponse.user:type_name -> authwise.types.core.v1alpha1.User
	10, // 3: authwise.integration.v1alpha1.UserPostProcessRequest.user:type_name -> authwise.types.core.v1alpha1.User
	10, // 4: authwise.integration.v1alpha1.UserPostProcessResponse.user:type_name -> authwise.types.core.v1alpha1.User
	10, // 5: authwise.integration.v1alpha1.GrantPostProcessRequest.user:type_name -> authwise.types.core.v1alpha1.User
	11, // 6: authwise.integration.v1alpha1.GrantPostProcessRequest.grant:type_name -> authwise.types.kit.v1alpha1.Grant
	11, // 7: authwise.integration.v1alpha1.GrantPostProcessResponse.grant:type_name -> authwise.types.kit.v1alpha1.Grant
	0,  // 8: authwise.integration.v1alpha1.AuthwiseIntegrationService.ResolveProvider:input_type -> authwise.integration.v1alpha1.ResolveProviderRequest
	2,  // 9: authwise.integration.v1alpha1.AuthwiseIntegrationService.Login:input_type -> authwise.integration.v1alpha1.LoginRequest
	4,  // 10: authwise.integration.v1alpha1.AuthwiseIntegrationService.UserPostProcess:input_type -> authwise.integration.v1alpha1.UserPostProcessRequest
	6,  // 11: authwise.integration.v1alpha1.AuthwiseIntegrationService.GrantPostProcess:input_type -> authwise.integration.v1alpha1.GrantPostProcessRequest
	1,  // 12: authwise.integration.v1alpha1.AuthwiseIntegrationService.ResolveProvider:output_type -> authwise.integration.v1alpha1.ResolveProviderResponse
	3,  // 13: authwise.integration.v1alpha1.AuthwiseIntegrationService.Login:output_type -> authwise.integration.v1alpha1.LoginResponse
	5,  // 14: authwise.integration.v1alpha1.AuthwiseIntegrationService.UserPostProcess:output_type -> authwise.integration.v1alpha1.UserPostProcessResponse
	7,  // 15: authwise.integration.v1alpha1.AuthwiseIntegrationService.GrantPostProcess:output_type -> authwise.integration.v1alpha1.GrantPostProcessResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_authwise_integration_v1alpha1_grpc_proto_init() }
func file_authwise_integration_v1alpha1_grpc_proto_init() {
	if File_authwise_integration_v1alpha1_grpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_authwise_integration_v1alpha1_grpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authwise_integration_v1alpha1_grpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authwise_integration_v1alpha1_grpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authwise_integration_v1alpha1_grpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authwise_integration_v1alpha1_grpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPostProcessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authwise_integration_v1alpha1_grpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPostProcessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authwise_integration_v1alpha1_grpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantPostProcessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authwise_integration_v1alpha1_grpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantPostProcessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_authwise_integration_v1alpha1_grpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_authwise_integration_v1alpha1_grpc_proto_goTypes,
		DependencyIndexes: file_authwise_integration_v1alpha1_grpc_proto_depIdxs,
		MessageInfos:      file_authwise_integration_v1alpha1_grpc_proto_msgTypes,
	}.Build()
	File_authwise_integration_v1alpha1_grpc_proto = out.File
	file_authwise_integration_v1alpha1_grpc_proto_rawDesc = nil
	file_authwise_integration_v1alpha1_grpc_proto_goTypes = nil
	file_authwise_integration_v1alpha1_grpc_proto_depIdxs = nil
}
